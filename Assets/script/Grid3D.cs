using System.Collections;using System.Collections.Generic;using UnityEngine;public class Grid
{    private int width;    private int height;    private int[,] gridArray;    private float cellSize;

    public Grid(int width, int height, float cellSize)
    {        this.width = width;        this.height = height;        this.cellSize = cellSize;        this.gridArray = new int[width, height];        for (int x = 0; x < gridArray.GetLength(0); x++)        {            for (int y = 0; y < gridArray.GetLength(1); y++)
            {                CreateWorldTest(gridArray[x, y].ToString(), null, GetWorldPosition(x, y) + new Vector3(cellSize, cellSize) * 2f, 7, Color.white, TextAnchor.LowerCenter);                Debug.DrawLine(GetWorldPosition(x, y), GetWorldPosition(x, y + 1), Color.white, 100f);                Debug.DrawLine(GetWorldPosition(x, y), GetWorldPosition(x + 1, y), Color.white, 100f);            }        }

        Debug.DrawLine(GetWorldPosition(0, height), GetWorldPosition(width, height), Color.white, 100f);        Debug.DrawLine(GetWorldPosition(width, 0), GetWorldPosition(width, height), Color.white, 100f);
        //  Debug.Log(width + "," + height);
    }    private Vector3 GetWorldPosition(int x, int y)    {        return new Vector3(x, y) * cellSize;    }    public static TextMesh CreateWorldTest(string text, Transform parent, Vector3 locationPosition, int fontSize, Color color, TextAnchor textAnchor       , int sortingOrder = 500){        GameObject gameObject = new GameObject("World_Text", typeof(TextMesh));        gameObject.GetComponent<Renderer>().material.color = Color.black;        Transform transform = gameObject.transform;        transform.SetParent(parent, false);        transform.localPosition = locationPosition;        TextMesh textMesh = gameObject.GetComponent<TextMesh>();        textMesh.anchor = textAnchor;        textMesh.alignment = TextAlignment.Center;        textMesh.text = text;        textMesh.fontSize = fontSize;        textMesh.color = color;        textMesh.GetComponent<MeshRenderer>().sortingOrder = sortingOrder;        return textMesh;    }}